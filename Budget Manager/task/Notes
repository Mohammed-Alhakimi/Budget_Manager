I decided to Use the strategy pattern to define each sorting type by adding a context in my wallet class and a method of analyze that uses an instance of that context to determine the sorting algorithm. This

For sorting all purchases, I first sorted them by name in reversed order then by  the amount -->>Referring to the problem in test (#7 Your program sort all purchases wrong!...)

To force all the doubles to have 2 decimal digits when printing I used the DecimalFormat class with the method format();

I decided to go with serialization to save object states

Sort All – sort the entire shopping list and display it so that the most expensive purchases are at the top of the list.
Sort By Type – show which category eats the most money. If a category has no purchases in it the total sum should be $0.
Sort Certain Type – same as Sort All, but for a specific category.